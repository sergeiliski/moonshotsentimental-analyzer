{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sergeiliski/Projects/horseapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergeiliski/Projects/horseapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergeiliski/Projects/horseapp/src/pages/ad/[id].jsx\";\nimport React from 'react'; // import { useRouter } from 'next/router'\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport fetch from 'isomorphic-fetch';\n\nfunction Ad(props) {\n  var thought = props.thought; // const router = useRouter()\n  // const { id } = router.query\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"bg-primary\",\n        children: thought.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Ad;\n\nAd.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var req, query, baseURL, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req, query = _ref.query;\n\n            if (!(query && query.id)) {\n              _context.next = 12;\n              break;\n            }\n\n            baseURL = req ? \"\".concat(req.protocol, \"://\").concat(req.get('Host')) : '';\n            _context.next = 5;\n            return fetch(\"\".concat(baseURL, \"/api/thought/\").concat(query.id));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            console.log('res', data);\n\n            if (!(data && data.length > 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              thought: data\n            });\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              error: {\n                statusCode: 404\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Ad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ad\");","map":{"version":3,"sources":["/Users/sergeiliski/Projects/horseapp/src/pages/ad/[id].jsx"],"names":["React","Row","Col","fetch","Ad","props","thought","message","getInitialProps","req","query","id","baseURL","protocol","get","response","json","data","console","log","length","error","statusCode"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAAA,MACTC,OADS,GACGD,KADH,CACTC,OADS,EAEjB;AACA;;AACA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BA,OAAO,CAACC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;KAXQH,E;;AAaTA,EAAE,CAACI,eAAH;AAAA,uEAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT,EAAcC,KAAd,QAAcA,KAAd;;AAAA,kBACfA,KAAK,IAAIA,KAAK,CAACC,EADA;AAAA;AAAA;AAAA;;AAEXC,YAAAA,OAFW,GAEDH,GAAG,aAAMA,GAAG,CAACI,QAAV,gBAAwBJ,GAAG,CAACK,GAAJ,CAAQ,MAAR,CAAxB,IAA4C,EAF9C;AAAA;AAAA,mBAGMX,KAAK,WAAIS,OAAJ,0BAA2BF,KAAK,CAACC,EAAjC,EAHX;;AAAA;AAGXI,YAAAA,QAHW;AAAA;AAAA,mBAIEA,QAAQ,CAACC,IAAT,EAJF;;AAAA;AAIXC,YAAAA,IAJW;AAKjBC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;;AALiB,kBAMbA,IAAI,IAAIA,IAAI,CAACG,MAAL,GAAc,CANT;AAAA;AAAA;AAAA;;AAAA,6CAOR;AACLd,cAAAA,OAAO,EAAEW;AADJ,aAPQ;;AAAA;AAAA,6CAYZ;AAAEI,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd;AAAT,aAZY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAelB,EAAf","sourcesContent":["import React from 'react'\n// import { useRouter } from 'next/router'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport fetch from 'isomorphic-fetch'\n\nfunction Ad(props) {\n  const { thought } = props\n  // const router = useRouter()\n  // const { id } = router.query\n  return (\n    <>\n      <Row noGutters>\n        <Col className=\"bg-primary\">{thought.message}</Col>\n      </Row>\n    </>\n  )\n}\n\nAd.getInitialProps = async ({ req, query }) => {\n  if (query && query.id) {\n    const baseURL = req ? `${req.protocol}://${req.get('Host')}` : ''\n    const response = await fetch(`${baseURL}/api/thought/${query.id}`)\n    const data = await response.json()\n    console.log('res', data)\n    if (data && data.length > 0) {\n      return {\n        thought: data,\n      }\n    }\n  }\n  return { error: { statusCode: 404 } }\n}\n\nexport default Ad\n"]},"metadata":{},"sourceType":"module"}