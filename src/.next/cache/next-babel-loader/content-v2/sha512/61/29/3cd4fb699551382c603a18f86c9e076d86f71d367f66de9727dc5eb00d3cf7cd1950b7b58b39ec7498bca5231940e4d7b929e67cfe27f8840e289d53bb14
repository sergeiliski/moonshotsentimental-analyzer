{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergeiliski/Projects/horseapp/src/pages/index.js\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport fetch from \"isomorphic-fetch\";\nimport Thoughts from \"../components/Thoughts\";\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxDEV(Thoughts, {\n    thoughts: props.thoughts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nIndex.getInitialProps = async ({\n  req\n}) => {\n  const baseURL = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n  const res = await fetch(`${baseURL}/api/thoughts`);\n  return {\n    thoughts: await res.json()\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/sergeiliski/Projects/horseapp/src/pages/index.js"],"names":["Container","Row","Col","fetch","Thoughts","Index","props","thoughts","getInitialProps","req","baseURL","protocol","get","res","json"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,KAAK,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAEDF,KAAK,CAACG,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,QAAMC,OAAO,GAAGD,GAAG,GAAI,GAAEA,GAAG,CAACE,QAAS,MAAKF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAgB,EAAxC,GAA4C,EAA/D;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAE,GAAEO,OAAQ,eAAZ,CAAvB;AACA,SAAO;AACLH,IAAAA,QAAQ,EAAE,MAAMM,GAAG,CAACC,IAAJ;AADX,GAAP;AAGD,CAND;;AAQA,eAAeT,KAAf","sourcesContent":["import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport fetch from \"isomorphic-fetch\";\nimport Thoughts from \"../components/Thoughts\";\n\nfunction Index(props) {\n  return (\n    <Thoughts thoughts={props.thoughts} />\n  );\n}\n\nIndex.getInitialProps = async ({ req }) => {\n  const baseURL = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n  const res = await fetch(`${baseURL}/api/thoughts`);\n  return {\n    thoughts: await res.json()\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}