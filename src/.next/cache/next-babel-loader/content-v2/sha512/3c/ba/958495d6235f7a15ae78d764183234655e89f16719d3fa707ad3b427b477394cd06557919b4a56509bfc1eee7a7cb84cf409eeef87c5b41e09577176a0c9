{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergeiliski/Projects/horseapp/src/pages/ad/[id].jsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport fetch from 'isomorphic-fetch';\n\nfunction Ad(props) {\n  const {\n    thought\n  } = props;\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log('props', props);\n  console.log('query', router.query);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"bg-primary\",\n        children: thought.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nAd.getInitialProps = async ({\n  req,\n  query,\n  res\n}) => {\n  if (query && query.id) {\n    const baseURL = req ? `${req.protocol}://${req.get('Host')}` : '';\n    const response = await fetch(`${baseURL}/api/thought/${query.id}`);\n    return {\n      thought: await response.json()\n    };\n  }\n\n  res.statusCode = 404;\n  res.end('Not found');\n};\n\nexport default Ad;","map":{"version":3,"sources":["/Users/sergeiliski/Projects/horseapp/src/pages/ad/[id].jsx"],"names":["React","useRouter","Row","Col","fetch","Ad","props","thought","router","id","query","console","log","message","getInitialProps","req","res","baseURL","protocol","get","response","json","statusCode","end"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,MAAM,CAACE,KAA5B;AACA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BH,OAAO,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;AAEDR,EAAE,CAACS,eAAH,GAAqB,OAAO;AAAEC,EAAAA,GAAF;AAAOL,EAAAA,KAAP;AAAcM,EAAAA;AAAd,CAAP,KAA+B;AAClD,MAAIN,KAAK,IAAIA,KAAK,CAACD,EAAnB,EAAuB;AACrB,UAAMQ,OAAO,GAAGF,GAAG,GAAI,GAAEA,GAAG,CAACG,QAAS,MAAKH,GAAG,CAACI,GAAJ,CAAQ,MAAR,CAAgB,EAAxC,GAA4C,EAA/D;AACA,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAE,GAAEa,OAAQ,gBAAeP,KAAK,CAACD,EAAG,EAApC,CAA5B;AACA,WAAO;AACLF,MAAAA,OAAO,EAAE,MAAMa,QAAQ,CAACC,IAAT;AADV,KAAP;AAGD;;AACDL,EAAAA,GAAG,CAACM,UAAJ,GAAiB,GAAjB;AACAN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,WAAR;AACD,CAVD;;AAYA,eAAelB,EAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport fetch from 'isomorphic-fetch'\n\nfunction Ad(props) {\n  const { thought } = props\n  const router = useRouter()\n  const { id } = router.query\n  console.log('props', props)\n  console.log('query', router.query)\n  return (\n    <>\n      <Row noGutters>\n        <Col className=\"bg-primary\">{thought.message}</Col>\n      </Row>\n    </>\n  )\n}\n\nAd.getInitialProps = async ({ req, query, res }) => {\n  if (query && query.id) {\n    const baseURL = req ? `${req.protocol}://${req.get('Host')}` : ''\n    const response = await fetch(`${baseURL}/api/thought/${query.id}`)\n    return {\n      thought: await response.json(),\n    }\n  }\n  res.statusCode = 404\n  res.end('Not found')\n}\n\nexport default Ad\n"]},"metadata":{},"sourceType":"module"}